######################################################################
# OVERALL SETTINGS FOR PYGOPHERD
######################################################################

[pygopherd]

# What port to listen on
port = 1170

# Where the documents are stored
root = /home/jgoerzen/gophertest

# Location of a file to use to figure out MIME types
mimetypes = ./mime.types

[logger]

# Log method to use.  One of:
#  syslog -- use Unix syslog facility
#  stdout -- log to standard output
#  none   -- no logging

logmethod = syslog

# If you enable syslog, you will need to define these as well:

# priority -- one of the following (listed in order of high to low):
# LOG_EMERG, LOG_ALERT, LOG_CRIT, LOG_ERR, LOG_WARNING, LOG_NOTICE,
# LOG_INFO, LOG_DEBUG

priority = LOG_INFO

# Facility -- one of the following:
# LOG_KERN, LOG_USER, LOG_MAIL, LOG_DAEMON, LOG_AUTH, LOG_LPR, LOG_NEWS,
# LOG_UUCP, LOG_CRON, LOG_LOCAL0 - LOG_LOCAL7

facility = LOG_LOCAL3



######################################################################
# GOPHER OBJECTS
######################################################################

# Settings for gopher objects

[GopherEntry]

# Use this MIME type if no other type is found.
defaultmimetype = text/plain

# Mapping from MIME types to gopher0 single-character types.
# This is a list of lists.  The first entry in each list is a
# regexp to match and the second is the result.
# 
# Please have a .* at the end to map all unknown types to a certain
# character.  For best results, that character should be nicely
# corresponding to the defaultmimetype.

mapping = [['text/html', 'h'],
        ['text/.+', '0'],
        ['application/mac-binhex40', '4'],
        ['audio/.+', 's'],
        ['image/gif', 'g'],
        ['image/.+', 'I'],
	['application/gopher-menu', '1'],
	['application/gopher\+-menu', '1'],
        ['multipart/mixed', 'M'],
        ['application/.+', '9'],
        ['.*', '0']
        ]

######################################################################
# HANDLERS
######################################################################

[handlers.HandlerMultiplexer]

# A list of the handlers to consider.  The handlers
# are tried in the order listed.
#
#
### Suggested settings:
# For UMN emulation:
#
# Note: the UMNDirHandler will handle all directories, even if they
# do not have UMN-specific files, so you do not need to list the
# dirhandler in this case.
#
# handlers = [UMN.UMNDirHandler, url.HTMLURLHandler,
#             html.HTMLFileTitleHandler, 
#             mbox.MBoxMessageHandler, mbox.MBoxFolderHandler, file.FileHandler]
#
# For Bucktooth emulation:
#
#handlers = [gophermap.BuckGophermapHandler, url.HTMLURLHandler,
#             file.FileHandler, dir.DirHandler]
#
# For blended buck+UMN setup.  Will use gophermap if present,
# otherwise fall back to UMN:

handlers = [gophermap.BuckGophermapHandler, mbox.MaildirFolderHandler,
            UMN.UMNDirHandler,
            url.HTMLURLHandler, html.HTMLFileTitleHandler,
            mbox.MBoxMessageHandler, mbox.MBoxFolderHandler, 
            mbox.MaildirMessageHandler, pyg.PYGHandler, scriptexec.ExecHandler,
	    file.FileHandler]

[handlers.dir.DirHandler]
# A regular expression of files to ignore.  These files
# will not be presented in lists of files to clients,
# but if clients know the exact path to the files, they can
# still be requested.
#
# This pattern is matched against the requested selector.
# Selectors are guaranteed to begin with a slash by this point.
# and never end with a slash unless they consist solely of a slash.
#
# By default, we ignore files starting with a period, gophermap
# files, and files ending with a tilde.
#
# The default emulates UMN's default plus buck.
#
# A buck-only server might like:
#
# ignorepatt = ~$|/\.|/gophermap$

ignorepatt = /.cap$|/lost\+found$|/lib$|/bin$|/etc$|/dev$|~$|\.cache$|\.cache\+$|\.forward$|\.message$|\.hushlogin$|\.kermrc$|\.notar$|\.where$|veronica.ctl$|robots.txt$|nohup.out$|/gophermap$|~$

# Expiration time, in seconds, for the cache.
# Set to 0 to disable caching entirely.

cachetime = 180

# Name of the cahe file.  Must be set to something even if the cachetime
# is zero.  In that case, this filename will not be used but for the conf
# file to parse, it must still be set.

cachefile = .cache.pygopherd.dir

######################################################################
# PROTOCOLS
######################################################################

[protocols.ProtocolMultiplexer]

# A list of the protocols to consider for each request.
# The protocols are tried in the order listed.
protocols = [http.HTTPProtocol, 
             gopherp.GopherPlusProtocol, rfc1436.GopherProtocol]

[protocols.gopherp.GopherPlusProtocol]
# The name and e-mail of the administrator
admin = Unconfigured Pygopherd Admin <pygopherd@nowhere.nowhere>

[protocols.http.HTTPProtocol]
iconmapping = {'h' : 'text.gif',
            '0' : 'text.gif',
            '4' : 'binhex.gif',
            's' : 'sound1.gif',
            'g' : 'image3.gif',
            'I' : 'image3.gif',
            'M' : 'text.gif',
            '9' : 'binary.gif',
            '1' : 'folder.gif',
            'i' : 'blank.gif'}
