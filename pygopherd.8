.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.\" **************************************************
.TH PYGOPHERD 8 "August 8, 2002" "John Goerzen" "PyGopherd Manual"
.\" **************************************************
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.\"
.\" **********************************************************************
.SH NAME
PyGopherd \- Multiprotocol Information Server
.\" **********************************************************************
.SH SYNOPSIS
.BI pygopherd\  [configfile]
.\" **********************************************************************
.SH DESCRIPTION

Welcome to \fBPyGopherd\fP. In a nutshell, \fBPyGopherd\fP is a modern dynamic
multi-protocol hierarchical information server with a pluggable
modularized extension system, full flexible caching, virtual files and
folders, and autodetection of file types -- all with support for
standardized yet extensible per-document metadata. Whew! Read on for
information on this what all these buzzwords mean.

\fBPyGopherd\fP is designed to serve up files using the Gopher Internet
protocol. With Gopher, you can mount a filesystem (viewing files and
folders as if they were local), browse Gopherspace with a web browser,
download files, and be interactive with searching.

But this is only part of the story. The world of Gopher is more
expansive than this. There are two major gopher protocols: Gopher0
(also known as RFC1436) and Gopher+. Gopher0 is a small, simple,
lightweight protocol that is very functional yet also extremely easy
to implement. Gopher0 clients can be easily places in small embedded
devices or in massive environments like a modern web browser.

Gopher+ is based on Gopher0 but extends it by providing document
metadata such as file size and MIME type. Gopher+ allows all sorts of
neat features, such as configurable metadata (serving up a bunch of
photos? Add a Subject field to your metadata to let a customized photo
browser display who is pictured) and multiple views of a file (let the
user select to view your photos as PNG or JPEG).

\fBPyGopherd\fP supports both.

\fBPyGopherd\fP also fully natively supports HTTP, the protocol used
on the Internet for most Web transactions. So, you can access a
\fBPyGopherd\fP server using anything from a small, 20-line client in
mobile phone to a massive 50-MB web browser.

.SS MODULARITY

\fBPyGopherd\fP is designed in an extremely modular fashion. In fact, all
protocols in \fBPyGopherd\fP and all handlers are modules. You can easily
select which modules to use and which to exclude, and the order in
which they are tried. Protocol modules implement different ways of
speaking to clients (HTTP, Gopher+, Gopher0) and handler modules
implement different ways of handling data on the local machine (files,
directories, links, mailboxes, etc.)
.\"******************************
.SS FEATURE LIST
Here are some of \fBPyGopherd\fP's features:
.IP \(em
Runs on any platform supported by Python 2.2. This includes virtually
every past and current flavor of Unix (Linux, *BSD, Solaris, SunOS),
Windows, MacOS 9.x and 10.x, and more. Some features may not be
available on non-Unix platforms, however.
.IP \(em
Runs on any platform supported by Java 1.1 via the Jython Python
implementation.
.IP \(em
Tunable server types via configuration directive -- forking or
threading.
.IP \(em
Secure design with support for chrooted execution.
.IP \(em
Feature-complete, full implementations of Gopher0 (RFC1436), Gopher+,
and HTTP/1.0.
.IP \(em
Complete support Bucktooth-style gophermap files.
.IP \(em
Complete support for UMN-type .Links, .names, etc. files and support
for .cap directories.
.IP \(em
Support for automatically finding the titles of HTML documents for
presentation in a directory.
.IP \(em
Virtual folder support can present many different types of files as
folders. Some examples are:
.RS
.IP \(em
Can present any Unix MBOX, MMDF box, MH directory, Maildir directory,
or Babyl mailbox as a virtual folder, the contents of which are the
messages in the mailbox.
.IP \(em
Can use a configurable separator to split a file into multiple
parts, the first line of each becoming the name for the virtual
folder.
.RE
.IP \(em
Versatile configuration file format is both extensible and nicely
complementary of the module system.
.IP \(em
Several options for running external programs to generate dynamic
content: UMN-style execution, Bucktooth-style execution, or Pygopher
PYG objects.
.IP \(em
Protocol-independant, handler-dependant caching. This speeds up time
by letting handlers cache dynamically-generated information --
currently used by the two directory handlers. This can improve
performance of directories by several orders of magnitude. Because
this is a handler cache only, all protocols can share the single cache
-- and since the processing time of the protocols is negligable
anyway, it works very well.
.IP \(em
Autosensing of MIME types and gopher0 item types. Both are completely
configurable. MIME type detection is done using a standard mime.types
file, and gopher0 types are calculated by using a configurable
regexp-based MIME-to-gophertype map.
.IP \(em
Heavy support of regular expressions in configuration.
.IP \(em
ProtocolMultiplexer and HandlerMultiplexer let you choose only those
protocols and handlers that you wish your server to support and the
order in which they are tried when a request comes in.
.IP \(em
Modular architecture permits rapid prototyping of new capabilities.
.IP \(em
Full logging via syslog.
.\" **********************************************************************
.SH INSTALLATION
If you are reading this document via the "man" command, it is likely
that you have no installation tasks to perform; your system
administrator has already installed it.  If you need to install it
yourself, you have three options: a system-wide installation with
Debian, system-wide installation with other systems, and a single-user
installation.  You can download the latest version of \fBPyGopherd\fP from
.UR http://quux.org/devel/gopher/pygopherd/
http://quux.org/devel/gopher/pygopherd/.
.UE
.\"******************************
.SS DEBIAN SYSTEM-WIDE INSTALLATION
If you are tracking Debian unstable, you may install
.B PyGopherD
by simply running the following command as root:
.PP
.B apt-get install pygopherd
.PP
If you are not tracking Debian unstable, download the Debian .deb
package from the \fBPyGopherd\fP website
and then run
.B dpkg -i
to install the downloaded package.  Then, go to CONFIGURATION below.
You will use
.B /etc/init.d/pygopherd start
to start the program.
.\"******************************
.SS OTHER SYSTEM-WIDE INSTALLATION
Download the tar.gz version of the package from the website.  Make
sure you have Python 2.2 or above installed; if now, download and
install it from
.UR http://www.python.org/
www.python.org.
.UE
Then run these commands:

.B tar -zxvf pygopherd-x.y.z.tar.gz
.br
.B cd pygopherd-x.y.z
.br
.B python2.2 setup.py
.PP
Some systems will need to use
.B python
instead of
.B python2.2.

Next, proceed to configuration.  Make sure that the
\fI/etc/pygopherd/pygopherd.conf\fP file names valid users
(\fBsetuid\fP and \fBsetgid\fP options) and a valid document root
(\fBroot\fP option).

You will type
.B pygopherd
to invoke the program.
.\"******************************
.SS SINGLE-ACCOUNT INSTALLATION
Download the tar.gz version of the package from the website.  Make
sure you have Python 2.2 installed; if not, download it from
.UR http://www.python.org/
www.python.org
.UE
Then run these commands:

.B tar -zxvf pygopherd-x.y.z.tar.gz
.br
.B cd pygopherd-x.y.z

Modify \fIconf/pygopherd.conf\fP as follows:
.IP \(bu
Set \fBusechroot = no\fP
.IP \(bu
Comment out (add a # sign to the start of the line) the \fBpidfile\fP,
\fBsetuid\fP, and \fBsetgid\fP lines.
.IP \(bu
Set \fBmimetypes = ./conf/mime.types\fP
.IP \(bu
Set \fBroot =\fP to something appropriate.
.IP \(bu
Set \fBport\fP to a number greater than 1024.
.PP
When you want to run
.B PyGopherd,
you will issue the
.B cd
command as above and then type
.B ./bin/pygopherd;
there is no installation step necessary.
.\" **********************************************************************
.SH CONFIGURATION
.B PyGopherd
is regulated by a configuration file that is normally stored in
\fI/etc/pygopherd/pygopherd.conf\fP.  You can specify alternate
configuration files on the command-line.  The \fBPyGopherd\fP
distribution ships with a sample \fIpygopherd.conf\fP file that
thoroughly documents the configuration file options and settings.
.\"##################################################
.\" TeX users may be more comfortable with the \fB<whatever>\fP and
.\" \fI<whatever>\fP escape sequences to invode bold face and italics, 
.\" respectively.
.\"\fBofflineimap\fP is a program that...
.\"**********************************************************************
.SH OPTIONS
All \fBPyGopherd\fP configuration is done via the configuration file.
Therefore, the program has only one command-line option.
.TP
.I configfile
This optional argument specifies the location of the configuration
file that \fBPyGopherD\fP is to use.
.\".TP
.\".B \-v, \-\-version
.\"Show version of program.
.\"**********************************************************************
.\".SH EXAMPLES
.\".SH ERRORS
.\"If you get one of some frequently-encountered or confusing errors,
.\"please check this section.
.\".SH OTHER FREQUENTLY ASKED QUESTIONS
.\"There are some other FAQs that might not fit into another section of
.\"this document, and they are enumerated here.
.\".TP
.\".B What platforms does OfflineIMAP run on?
.\"It should run on most platforms supported by Python, which are quite a
.\"few.
.SH CONFORMING TO
.IP \(bu
The Internet Gopher Protocol as specified in RFC1436
.IP \(bu
The Gopher+ upward-compatible enhancements to the Internet Gopher
Protocol from the University of Minnesota as laid out at
.UR gopher://gopher.quux.org/0/Archives/mirrors/boombox.micro.umn.edu/pub/gopher/gopher_protocol/Gopher+/Gopher+.txt
gopher://gopher.quux.org/0/Archives/mirrors/boombox.micro.umn.edu/pub/gopher/gopher_protocol/Gopher+/Gopher+.txt
.UE
.IP \(bu
The gophermap file format as originally implemented in the Bucktooth
gopher server and described at
.UR gopher://gopher.floodgap.com/0/buck/dbrowse%3Ffaquse%201
gopher://gopher.floodgap.com/0/buck/dbrowse%3Ffaquse%201
.IP \(bu
The Links to URL specification as laid out by John Goerzen at
.UR gopher://gopher.quux.org/0/Archives/Mailing%20Lists/gopher/gopher.2002-02%3f/MBOX-MESSAGE/34
gopher://gopher.quux.org/0/Archives/Mailing%20Lists/gopher/gopher.2002-02%3f/MBOX-MESSAGE/34
.IP \(bu
The UMN format for specifying object attributes and links
with .cap, .Links, .abstract, and similar files as specified elsewhere
in this document and implemented by UMN gopherd.
.IP \(bu
The PYG format for extensible Python gopher objects as created for
\fBPyGopherd\fP.
.IP \(bu
Hypertext Transfer Protocol HTTP/1.0 as specified in RFC1945
.IP \(bu
Hypertext Markup Language (HTML) 3.2 and 4.0 Transitional as specified
in RFC1866 and RFC2854.
.IP \(bu
Maildir as specified in
.UR http://www.qmail.org/qmail-manual-html/man5/maildir.html
http://www.qmail.org/qmail-manual-html/man5/maildir.html
.UE
and
.UR http://cr.yp.to/proto/maildir.html
http://cr.yp.to/proto/maildir.html.
.UE
.IP \(bu
The mbox mail storage format as specified in
.UR http://www.qmail.org/qmail-manual-html/man5/mbox.html
http://www.qmail.org/qmail-manual-html/man5/mbox.html
.IP \(bu
Registered MIME media types as specified in RFC2048.
.IP \(bu
Script execution conforming to both UMN standards as laid out in UMN
gopherd(1) and Bucktooth standards as specified at
.UR gopher://gopher.floodgap.com:70/0/buck/dbrowse%3ffaquse%202
gopher://gopher.floodgap.com:70/0/buck/dbrowse%3ffaquse%202
so far as each can be implemented consistent with secure design principles.
.IP \(bu
Standard Python 2.2.1 as implemented on POSIX-compliant systems.
.\".SH NOTES
.SH BUGS
Reports of bugs should be sent via e-mail to the
.B PyGopherd
bug-tracking system (BTS) at
.UR mailto:pygopherd@bugs.complete.org
pygopherd@bugs.complete.org
.UE
or submitted on-line using the Web interface at
.UR http://bugs.complete.org/
http://bugs.complete.org/.
.UE
The Web site also lists all current bugs, where you can check their
status or contribute to fixing them.
.SH COPYRIGHT
\fBPyGopherd\fP is Copyright (C) 2002 John Goerzen.
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
.PP
You should have received a copy of the GNU General Public License
along with this program; if not, write to:
.PP
Free Software Foundation, Inc.
.br
59 Temple Place
.br
Suite 330
.br
Boston, MA  02111-1307
.br
USA
.SH AUTHOR
.B PyGopherd,
its libraries, documentation, and all included files
was written by John Goerzen <jgoerzen@complete.org> and
copyright is held as stated in the COPYRIGHT section.
.PP
\fBPyGopherd\fP may be downloaded, and information found, from its
homepage via either Gopher or HTTP:
.PP
.UR gopher://quux.org/1/devel/gopher/pygopherd
gopher://quux.org/1/devel/gopher/pygopherd
.UE
.br
.UR http://quux.org/devel/gopher/pygopherd
http://quux.org/devel/gopher/pygopherd
.UE
.PP
\fBPyGopherd\fP may also be downloaded using Subversion.  Additionally,
the distributed tar.gz may be updated with a simple "svn update"
command; it is ready to go.  For information on getting \fbPyGopherd\fP
with Subversion, please visit:
.PP
.UR http://svn.complete.org/
http://svn.complete.org/
.UE
.SH SEE ALSO
.BR python (1).
.\".BR bar (1),
.\".BR baz (1).
.\".br
.\"The programs are documented fully by
.\".IR "The Rise and Fall of a Fooish Bar" ,
.\"available via the Info system.
.\".SH AUTHOR
.\"This manual page was written by John Goerzen <jgoerzen@complete.org>,
.\"for the Debian GNU/Linux system (but may be used by others).
